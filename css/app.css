/* Body */

body {
    margin: 0; /* Reset margins */
    background-image: url(../img/light-geo-bg.png); /* Default: Repeat img */
    background-position: center; /* Grow bg from center */
    display: grid; /* Main CSS grid layout */
    grid-template-areas:
    "header"
    "board"
    "score";
    justify-items: center; /* Center children horizontally */
}

/* Header */

h1 {
    font-family: 'Montserrat', sans-serif;
    font-style: italic;
    font-weight: 800;
    font-size: 40px;
    color: #0086C3;
    margin: 0; /* Reset margins */
    margin-top: 40px;
    grid-area: header;
}

/* Board */

#board {
    perspective: 4000px; /* Give depth to card flip animation */
    width: 80vw; /* Scale with viewport width */
    height: 80vw; /* Scale identically --- to maintain 1:1 aspect ratio */
    min-width: 320px;
    min-height: 320px;
    max-width: 640px;
    max-height: 640px;
    background: linear-gradient(to bottom right, #E5D3B8, #0086C3);
    border-radius: 8px;
    list-style-type: none;
    margin: 0; /* Reset margins */
    margin-top: 32px;
    padding: 0; /* Reset paddings */
    padding: 32px;
    grid-area: board;
    display: grid; /* Lay cards in their own CSS grid layout */
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-gap: 24px;
    box-shadow: 0 0 32px grey;
}

/* Cards */

/* Use container as a convenient proxy for a card */
.card-container {
    cursor: pointer;
    display: grid; /* Use single-area grid to superpose front and back */
    grid-template-areas:
    "card";
}

.card {
    border-radius: 8px;
    box-shadow: 0 0 24px grey;
    grid-area: card; /* Position front, back on same area to superpose them */
}

.card-front {
    backface-visibility: hidden; /* Make front's back invisible */
    transform: rotateY(180deg); /* Start with card's front facing down */
    z-index: 1; /* Ensure card fronts are in front of card backs */
}

.card-back {
    /* No rotateY() this time --- to start with card's back facing up */
    background-color: #2e3d49;
}

/* Animations */

/* Animation shorthand: name, duration, timing, preserve-anim */
.reveal-front { animation: reveal-front .4s linear forwards; }
.hide-back { animation: hide-back .4s linear forwards; }
.hide-front { animation: hide-front .4s linear forwards; }
.reveal-back { animation: reveal-back .4s linear forwards; }

@keyframes reveal-front {
    from { transform: rotateY(180deg) scale(1); }
    50% { transform: rotateY(90deg) scale(1.6); }
    to { transform: rotateY(0deg) scale(1); }
}

@keyframes hide-back {
    from { transform: rotateY(0deg) scale(1); }
    50% { transform: rotateY(-90deg) scale(1.6); }
    to { transform: rotateY(-180deg) scale(1); }
}

@keyframes hide-front {
    from { transform: rotateY(0deg) scale(1); }
    50% { transform: rotateY(90deg) scale(1.6); }
    to { transform: rotateY(180deg) scale(1); }
}

@keyframes reveal-back {
    from { transform: rotateY(-180deg) scale(1); }
    50% { transform: rotateY(-90deg) scale(1.6); }
    to { transform: rotateY(0deg) scale(1); }
}

.matched-card {
    /* Transition shorthand: property, duration */
    transition: background-color .4s;
    /* Override priority of animation bg with !important */
    background-color: #66bb6a !important; /* Material green 400 */
}

.mismatched-card {
    /* Transition shorthand: property, duration */
    transition: background-color .4s;
    /* Override priority of animation bg with !important */
    background-color: #ef5350 !important; /* Material red 400 */
}

/* Icons */

/* Attribute card icons using classes */
/* Background shorthand: bg-color, bg-image, repeat, position, size */
.plane-icon { background: #02b3e4 url(../img/plane.png) no-repeat center/56px; }
.art-icon { background: #02b3e4 url(../img/art.png) no-repeat center/56px; }
.cloud-icon { background: #02b3e4 url(../img/cloud.png) no-repeat center/56px; }
.die-icon { background: #02b3e4 url(../img/die.png) no-repeat center/56px; }
.fire-icon { background: #02b3e4 url(../img/fire.png) no-repeat center/56px; }
.paw-icon { background: #02b3e4 url(../img/paw.png) no-repeat center/56px; }
.sun-icon { background: #02b3e4 url(../img/sun.png) no-repeat center/56px; }
.world-icon { background: #02b3e4 url(../img/world.png) no-repeat center/56px; }

/*Score*/

#score {
    width: 320px;
    border-radius: 8px;
    margin-top: 16px;
    grid-area: score;
    display: flex; /* Flexbox: Default to horizontal layout -- for mobile */
    justify-content: space-between; /* Space children evenly */
    align-items: center; /* Align children vertically */
}

#moves-counter {
    font-family: Montserrat, sans-serif;
    font-weight: 800;
    color: #0086C3;
}

#stars-counter {
    list-style-type: none;
    padding: 0; /* Reset paddings */
    display: flex; /* Flexbox: Default to horizontal layout -- for mobile */
}

.star {
    width: 40px;
    height: 40px;
    background-color: #0086C3;
    -webkit-mask: url(../img/star-on.svg); /* Use svg image as mask */
    -webkit-mask-size: cover; /* Fit svg to parent */
}

.star-outlined {
    -webkit-mask: url(../img/star-off.svg); /* Use svg image as mask */
    -webkit-mask-size: cover; /* Fit svg to parent */
}

#reset-button {
    width: 40px;
    height: 40px;
    background-color: #0086C3;
    -webkit-mask: url(../img/reset-button.svg); /* Use svg image as mask */
    -webkit-mask-size: cover; /* Fit svg to parent */
    cursor: pointer;
}

#reset-button:hover {
    background-color: #003c8f;
}

/* Media queries: responsive design */

/* Desktop UI --- move score panel to side */
@media screen and (min-width: 700px) {
    /* Change base CSS grid layout */
    body {
        grid-template-columns: auto 80px 800px auto;
        grid-template-areas:
        ". . header ."
        ". score board .";
    }

    #score {
        flex-direction: column; /* Make score panel vertical */
        justify-content: center; /* Bring together moves, stars, and reset */
    }

    #stars-counter {
        flex-direction: column; /* Make stars counter vertical */
    }
}

/* TODO: update readme */
