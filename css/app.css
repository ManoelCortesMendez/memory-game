/* General */
body {
  margin: 0; /* Reset margins */
  background: url(../img/geo-bg-light.png) center; /* Grow bg from center */
  display: grid; /* Define main CSS grid layout */
  grid-template-areas:
  "header"
  "gameboard"
  "score-panel";
  justify-items: center; /* Center children horizontally */
}

/* Header */
h1 {
  font: italic 800 40px Montserrat, sans-serif;
  color: #0086c3;
  margin: 0; /* Reset margins */
  margin-top: 40px;
  grid-area: header;
}

/* Gameboard */
#gameboard {
  perspective: 4000px; /* Give depth to card flip animation */
  width: 80vw; /* Scale with viewport width */
  height: 80vw; /* Scale identically to maintain 1:1 aspect ratio */
  /* Set size contraints to make design work at any screen size */
  min-width: 240px;
  min-height: 240px;
  max-width: 640px;
  max-height: 640px;
  background: linear-gradient(to bottom right, #e5d3b8, #0086c3);
  border-radius: 8px;
  list-style-type: none;
  margin: 0; /* Reset margins */
  margin-top: 32px;
  padding: 0; /* Reset paddings */
  padding: 32px;
  box-shadow: 0 0 32px grey;
  grid-area: gameboard;
  display: grid; /* Lay cards in their own CSS grid layout */
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-gap: 24px;
}

.card-container {
  cursor: pointer;
  display: grid; /* Use single-area grid to superpose front and back */
  grid-template-areas:
  "card";
}

.card {
  border-radius: 8px;
  box-shadow: 0 0 24px grey;
  grid-area: card; /* Position front, back on same area to superpose them */
}

.card-front {
  backface-visibility: hidden; /* Make front's back invisible */
  transform: rotateY(180deg); /* Start with card's front facing down */
  z-index: 1; /* Ensure card fronts are in the foreground */
}

.card-back {
  /* No rotateY() this time to start with card backs facing up */
  background-color: #2e3d49;
}

.matched-card {
  transition: background-color 0.2s;
  /* Override priority of animation bg with !important */
  background-color: #66bb6a !important;
}

.mismatched-card {
  transition: background-color 0.2s;
  /* Override priority of animation bg with !important */
  background-color: #ef5350 !important;
}

.plane-icon { background: #02b3e4 url(../img/plane.png) no-repeat center/56px; }
.art-icon { background: #02b3e4 url(../img/art.png) no-repeat center/56px; }
.cloud-icon { background: #02b3e4 url(../img/cloud.png) no-repeat center/56px; }
.die-icon { background: #02b3e4 url(../img/die.png) no-repeat center/56px; }
.fire-icon { background: #02b3e4 url(../img/fire.png) no-repeat center/56px; }
.paw-icon { background: #02b3e4 url(../img/paw.png) no-repeat center/56px; }
.sun-icon { background: #02b3e4 url(../img/sun.png) no-repeat center/56px; }
.world-icon { background: #02b3e4 url(../img/world.png) no-repeat center/56px; }

/*Score panel*/
#score-panel {
  width: 320px;
  border-radius: 8px;
  margin-top: 16px;
  grid-area: score-panel;
  display: flex; /* Default: horizontal layout -- great for mobile */
  justify-content: space-between; /* Space children evenly */
  align-items: center; /* Center children along cross axis */
}

.score-text {
  margin: 16px;
  font-family: Montserrat, sans-serif;
  font-weight: 800;
  color: #0086c3;
}

#stars-counter {
  margin: 0; /* Reset margins */
  padding: 0; /* Reset paddings */
  list-style-type: none;
  display: flex; /* Default: horizontal layout -- great for mobile */
}

.star {
  width: 40px;
  height: 40px;
  background-color: #0086c3;
  -webkit-mask: url(../img/star.svg); /* Use svg image as mask */
  -webkit-mask-size: cover; /* Fit svg to parent */
}

.star-outlined {
  -webkit-mask: url(../img/star-outline.svg); /* Use svg image as mask */
  -webkit-mask-size: cover; /* Fit svg to parent */
}

#reset-btn {
  width: 40px;
  height: 40px;
  background-color: #0086c3;
  cursor: pointer;
  -webkit-mask: url(../img/reset-btn.svg); /* Use svg image as mask */
  -webkit-mask-size: cover; /* Fit svg to parent */
}

#reset-btn:hover {
  background-color: #003c8f;
}

/* Modal */
#victory-modal {
  font-family: Montserrat, sans-serif;
  color: white;
  text-align: center;
  background-color: #66bb6a;
  border: none;
  border-radius: 8px;
}

#victory-modal::backdrop {
  background-color: grey;
  opacity: 0.8;
}

h2 {
  margin: 0; /* Reset margins */
}

#game-stats-modal {
  padding: 0; /* Reset paddings */
  list-style-type: none;
}

#reset-btn-modal {
  background-color: #98ee99;
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
}

#reset-btn-modal:hover {
  box-shadow: 0 0 16px grey;
}

/* Animations */
.reveal-front { animation: reveal-front 0.2s linear forwards; }
.hide-front { animation: hide-front 0.2s linear forwards; }
.hide-back { animation: hide-back 0.2s linear forwards; }
.reveal-back { animation: reveal-back 0.2s linear forwards; }

@keyframes reveal-front {
  from { transform: rotateY(180deg) scale(1); }
  50% { transform: rotateY(90deg) scale(1.6); }
  to { transform: rotateY(0deg) scale(1); }
}

@keyframes hide-front {
  from { transform: rotateY(0deg) scale(1); }
  50% { transform: rotateY(90deg) scale(1.6); }
  to { transform: rotateY(180deg) scale(1); }
}

@keyframes reveal-back {
  from { transform: rotateY(-180deg) scale(1); }
  50% { transform: rotateY(-90deg) scale(1.6); }
  to { transform: rotateY(0deg) scale(1); }
}

@keyframes hide-back {
  from { transform: rotateY(0deg) scale(1); }
  50% { transform: rotateY(-90deg) scale(1.6); }
  to { transform: rotateY(-180deg) scale(1); }
}

/* Media queries */
@media screen and (min-width: 800px) {
  /* Desktop UI: change CSS grid layout to move score panel to side */
  body {
    grid-template-columns: auto 80px 800px auto;
    grid-template-areas:
    ". . header ."
    ". score-panel gameboard .";
  }

  #score-panel {
    flex-direction: column; /* Make score panel vertical */
    justify-content: center; /* Bring together moves, stars, and reset */
  }

  #stars-counter {
    flex-direction: column; /* Make stars counter vertical */
  }
}
